### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  addTodo(title: String!): Todo!
  deleteTodo(todoId: Int!): Todo!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  updateTodo(isDone: Boolean!, title: String!, todoId: Int!): Todo!
}

type Query {
  feed(
    """Filter by title"""
    filter: String
    orderBy: [TodoOrderByInput!]
    skip: Int
    take: Int
  ): TodoFeed!
}

enum Sort {
  asc
  desc
}

type Todo {
  createdAt: DateTime
  id: Int!
  isDone: Boolean
  title: String
  updatedAt: DateTime
  userId: Int
}

type TodoFeed {
  count: Int
  id: ID
  todos: [Todo!]!
}

input TodoOrderByInput {
  createdAt: Sort
  isDone: Sort
  title: Sort
  updatedAt: Sort
}

type User {
  createdAt: Date
  id: Int!
  name: String!
}